# Environments
# RUN_COMPONENTS=server|agent|cli - execute workflow for components
# RUN_PHASES=build-image|publish-quay|publish-ghcr|publish-ecr - execute workflow phases
# CI_MANUAL_TAG=0.0.1 - application release version, gets priority over CI_COMMIT_TAG

variables:
  - &debian_image 'public.ecr.aws/docker/library/debian:bookworm-slim'
  - &golang_image 'public.ecr.aws/docker/library/golang:1.22.4-bookworm'
  - &node_image 'public.ecr.aws/docker/library/node:22.3.0-bookworm-slim'
  - &kaniko_image "gcr.io/kaniko-project/executor:v1.23.1-debug"
  - &skopeo_image "quay.io/containers/skopeo:v1.15.1"
  - &awscli_image "public.ecr.aws/aws-cli/aws-cli:2.17.2"

matrix:
  APP_COMPONENT:
    - server
    - agent
    - cli

when:
  - branch: main
    event:
      - manual
    evaluate: 'SKIP_COMPONENT != APP_COMPONENT'
  - branch:
      exclude: main
    event:
      - manual
      - tag
    evaluate: 'RUN_COMPONENTS == "" || APP_COMPONENT in split(RUN_COMPONENTS, ",")'

steps:
  # prepare
  set-env:
    image: *debian_image
    commands:
      - .ci/set-env.sh

  # build
  vendor:
    when:
      evaluate: 'RUN_PHASES == "" || "build-image" in split(RUN_PHASES, ",")'
    image: *golang_image
    commands:
      - .ci/vendor.sh
  build-ui:
    when:
      evaluate: 'APP_COMPONENT == "server" && (RUN_PHASES == "" || "build-image" in split(RUN_PHASES, ","))'
    image: *node_image
    commands:
      - .ci/build-ui.sh
  build:
    image: *golang_image
    commands:
      - .ci/build.sh

  # image
  image:
    when:
      evaluate: 'RUN_PHASES == "" || "build-image" in split(RUN_PHASES, ",")'
    image: *kaniko_image
    environment:
      HARBOR_CREDS:
        from_secret: fb_harbor_creds
    commands:
      - .ci/image.sh
  image-debug:
    when:
      evaluate: 'RUN_PHASES == "" || "build-image" in split(RUN_PHASES, ",")'
    image: *kaniko_image
    environment:
      IMAGE_DEBUG: true
      HARBOR_CREDS:
        from_secret: fb_harbor_creds
    commands:
      - .ci/image.sh

  # publish external
  publish-quay:
    when:
      evaluate: '(RUN_PHASES == "" || "publish-quay" in split(RUN_PHASES, ",")) && (CI_COMMIT_TAG != "" || CI_MANUAL_TAG != "")'
    image: *skopeo_image
    environment:
      DEST_REGISTRY: quay.io
      DEST_CREDS:
        from_secret: fb_quay_creds
    commands:
      - .ci/publish-external.sh
  publish-ghcr:
    when:
      evaluate: '(RUN_PHASES == "" || "publish-ghcr" in split(RUN_PHASES, ",")) && (CI_COMMIT_TAG != "" || CI_MANUAL_TAG != "")'
    image: *skopeo_image
    environment:
      DEST_REGISTRY: ghcr.io
      DEST_CREDS:
        from_secret: fb_ghcr_creds
    commands:
      - .ci/publish-external.sh
  login-ecr:
    when:
      evaluate: '(RUN_PHASES == "" || "publish-ecr" in split(RUN_PHASES, ",")) && (CI_COMMIT_TAG != "" || CI_MANUAL_TAG != "")'
    image: *awscli_image
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: fb_ecr_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: fb_ecr_key
    commands:
      - .ci/login-ecr.sh
  publish-ecr:
    environment:
      DEST_REGISTRY: public.ecr.aws
    when:
      evaluate: '(RUN_PHASES == "" || "publish-ecr" in split(RUN_PHASES, ",")) && (CI_COMMIT_TAG != "" || CI_MANUAL_TAG != "")'
    image: *skopeo_image
    commands:
      - .ci/publish-external.sh
